import logging
import unittest
import copy

from arcimoto.exceptions import *
import arcimoto.runtime
import arcimoto.tests
import recall_functions

logging.basicConfig()
logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)


class RecallCreateTestCase(unittest.TestCase):

    args = {
        'title': 'TEST-GENERATED-RECALL',
        'description': 'Generated by unit tests',
        'nhtsa_number': '1234567890',
        'mfr_campaign_id': '0987654321',
        'country': 'USA',
        'safety_recall': True,
        'safety_description': 'Generated by unit test script'
    }

    def test_recall_create_success(self):
        recall_id = recall_functions.recall_create()
        self.assertTrue(recall_id is not None)
        recall_functions.recall_delete(recall_id)

    # test errors
    def test_recall_create_error_input_null_title(self):
        args = copy.deepcopy(self.args)
        args['title'] = None
        with self.assertRaises(ArcimotoArgumentError):
            recall_functions.recall_create(args)

    def test_recall_create_error_input_null_description(self):
        args = copy.deepcopy(self.args)
        args['description'] = None
        with self.assertRaises(ArcimotoArgumentError):
            recall_functions.recall_create(args)

    def test_recall_create_error_input_null_nhtsa_number(self):
        args = copy.deepcopy(self.args)
        args['nhtsa_number'] = None
        with self.assertRaises(ArcimotoArgumentError):
            recall_functions.recall_create(args)

    def test_recall_create_error_input_safety_recall_true_but_null_safety_description(self):
        args = copy.deepcopy(self.args)
        args['safety_description'] = None
        with self.assertRaises(ArcimotoArgumentError):
            recall_functions.recall_create(args)

    def test_recall_create_error_user_unauthorized(self):
        with self.assertRaises(ArcimotoPermissionError):
            recall_functions.recall_create(None, False)


@arcimoto.runtime.handler
def test_recall_create():
    return arcimoto.tests.handle_test_result(unittest.TextTestRunner().run(
        unittest.TestLoader().loadTestsFromTestCase(RecallCreateTestCase)
    ))


lambda_handler = test_recall_create
